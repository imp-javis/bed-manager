# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'patient_status.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from amu_database import getBedListSize, getPatientsinBed, getPatientInfo, getLoungeListSize, getPatientsinLounge, getPatientsDownstream, getDownstreamListSize, updateCheck_discharge, updateCheck_dischargeLounge, updateCheck_dischargeSum, updateCheck_dischargeMed, updateWard, updateCheck_death




class Ui_patientStatus(object):
    def setupUi(self, patientStatus): #, user, phototag, pos
        patientStatus.setObjectName("patientStatus")
        patientStatus.resize(1429, 883)
        font = QtGui.QFont()
        font.setFamily("Arial")
        patientStatus.setFont(font)
        self.centralwidget = QtWidgets.QWidget(patientStatus)
        self.centralwidget.setObjectName("centralwidget")

        self.patientListTitle = QtWidgets.QLabel(self.centralwidget)
        self.patientListTitle.setGeometry(QtCore.QRect(620, 30, 231, 51))
        self.patientListTitle.setStyleSheet("font: 25pt \"Arial\";")
        self.patientListTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.patientListTitle.setObjectName("patientListTitle")

        # return to main button
        self.buttBack = QtWidgets.QPushButton(self.centralwidget)
        self.buttBack.setGeometry(QtCore.QRect(30, 30, 140, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.buttBack.setFont(font)
        self.buttBack.setObjectName("buttBack")

        # confirm button
        self.buttConfirm = QtWidgets.QPushButton(self.centralwidget)
        self.buttConfirm.setGeometry(QtCore.QRect(1252, 30, 140, 50))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.buttConfirm.setFont(font)
        self.buttConfirm.setObjectName("buttConfirm")

        # tab widget
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(30, 110, 1381, 751))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(15)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")

        #----------------------- bed tab ------------------------------------------------------------------------
        self.bedTab = QtWidgets.QWidget()
        self.bedTab.setObjectName("bedTab")

        self.bedTable = QtWidgets.QTableWidget(self.bedTab)
        self.bedTable.setGeometry(QtCore.QRect(10, 20, 1131, 661))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.bedTable.setFont(font)
        self.bedTable.setWordWrap(True)
        self.bedTable.setObjectName("bedTable")

        self.bedTable.setColumnCount(12)
        self.bedTable.setRowCount(0)

        # table settings
        self.defColumn(self.bedTable)
        self.bedTable.setColumnWidth(bedColumn,30)
        self.bedTable.setColumnWidth(idColumn,30)
        self.bedTable.setColumnWidth(nameColumn,135)
        self.bedTable.setColumnWidth(detailsColumn,105)
        self.bedTable.setColumnWidth(diagnosisColumn,155)
        self.bedTable.setColumnWidth(isoColumn,75)
        self.bedTable.setColumnWidth(dischargeColumn,75)
        self.bedTable.setColumnWidth(dis_loungeColumn,75)
        self.bedTable.setColumnWidth(dis_sumColumn,75)
        self.bedTable.setColumnWidth(dis_medColumn,75)
        self.bedTable.setColumnWidth(downstreamColumn,115)
        self.bedTable.setColumnWidth(deathColumn,45)

        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.bedTable.setHorizontalHeaderItem(11, item)

        # downstream ward availability on the beds tab
        self.wardFrame = QtWidgets.QFrame(self.bedTab)
        self.wardFrame.setGeometry(QtCore.QRect(1160, 30, 201, 641))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.wardFrame.setFont(font)
        self.wardFrame.setAutoFillBackground(True)
        self.wardFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.wardFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.wardFrame.setObjectName("wardFrame")

        self.wardBedTitle = QtWidgets.QLabel(self.wardFrame)
        self.wardBedTitle.setGeometry(QtCore.QRect(0, 10, 201, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(15)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.wardBedTitle.setFont(font)
        self.wardBedTitle.setStyleSheet("font: 15pt \"Arial\";")
        self.wardBedTitle.setScaledContents(False)
        self.wardBedTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.wardBedTitle.setWordWrap(True)
        self.wardBedTitle.setObjectName("wardBedTitle")

        # cardiology ward (bedTab)
        self.cardioFrame = QtWidgets.QFrame(self.wardFrame)
        self.cardioFrame.setGeometry(QtCore.QRect(20, 90, 161, 91))
        self.cardioFrame.setAutoFillBackground(False)
        self.cardioFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.cardioFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.cardioFrame.setObjectName("cardioFrame")

        self.cardioTitle = QtWidgets.QLabel(self.cardioFrame)
        self.cardioTitle.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.cardioTitle.setFont(font)
        self.cardioTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.cardioTitle.setObjectName("cardioTitle")

        self.cardio = QtWidgets.QLabel(self.cardioFrame)
        self.cardio.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.cardio.setFont(font)
        self.cardio.setText("")
        self.cardio.setAlignment(QtCore.Qt.AlignCenter)
        self.cardio.setObjectName("cardio")

        # endocrinology frame (bedTab)
        self.endoFrame = QtWidgets.QFrame(self.wardFrame)
        self.endoFrame.setGeometry(QtCore.QRect(20, 200, 161, 91))
        self.endoFrame.setAutoFillBackground(False)
        self.endoFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.endoFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.endoFrame.setObjectName("endoFrame")

        self.endoTitle = QtWidgets.QLabel(self.endoFrame)
        self.endoTitle.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.endoTitle.setFont(font)
        self.endoTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.endoTitle.setObjectName("endoTitle")

        self.endo = QtWidgets.QLabel(self.endoFrame)
        self.endo.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.endo.setFont(font)
        self.endo.setText("")
        self.endo.setAlignment(QtCore.Qt.AlignCenter)
        self.endo.setObjectName("endo")

        # gastroenterology ward (bedTab)
        self.gastroFrame = QtWidgets.QFrame(self.wardFrame)
        self.gastroFrame.setGeometry(QtCore.QRect(20, 310, 161, 91))
        self.gastroFrame.setAutoFillBackground(False)
        self.gastroFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.gastroFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.gastroFrame.setObjectName("gastroFrame")

        self.gastroTitle = QtWidgets.QLabel(self.gastroFrame)
        self.gastroTitle.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.gastroTitle.setFont(font)
        self.gastroTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.gastroTitle.setObjectName("gastroTitle")

        self.gastro = QtWidgets.QLabel(self.gastroFrame)
        self.gastro.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.gastro.setFont(font)
        self.gastro.setText("")
        self.gastro.setAlignment(QtCore.Qt.AlignCenter)
        self.gastro.setObjectName("gastro")

        # geriatrics ward (bedTab)
        self.geriFrame = QtWidgets.QFrame(self.wardFrame)
        self.geriFrame.setGeometry(QtCore.QRect(20, 420, 161, 91))
        self.geriFrame.setAutoFillBackground(False)
        self.geriFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.geriFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.geriFrame.setObjectName("geriFrame")

        self.geriTitle = QtWidgets.QLabel(self.geriFrame)
        self.geriTitle.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.geriTitle.setFont(font)
        self.geriTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.geriTitle.setObjectName("geriTitle")

        self.geri = QtWidgets.QLabel(self.geriFrame)
        self.geri.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.geri.setFont(font)
        self.geri.setText("")
        self.geri.setAlignment(QtCore.Qt.AlignCenter)
        self.geri.setObjectName("geri")

        # respiratory ward (bedTab)
        self.respFrame = QtWidgets.QFrame(self.wardFrame)
        self.respFrame.setGeometry(QtCore.QRect(20, 530, 161, 91))
        self.respFrame.setAutoFillBackground(False)
        self.respFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.respFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.respFrame.setObjectName("respFrame")

        self.respTitle = QtWidgets.QLabel(self.respFrame)
        self.respTitle.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.respTitle.setFont(font)
        self.respTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.respTitle.setObjectName("respTitle")

        self.resp = QtWidgets.QLabel(self.respFrame)
        self.resp.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.resp.setFont(font)
        self.resp.setText("")
        self.resp.setAlignment(QtCore.Qt.AlignCenter)
        self.resp.setObjectName("resp")

        self.wardFrame.raise_()
        self.bedTable.raise_()
        self.tabWidget.addTab(self.bedTab, "")

        #----------------------- lounge tab --------------------------------------------------------------
        self.loungeTab = QtWidgets.QWidget()
        self.loungeTab.setObjectName("loungeTab")

        self.loungeTable = QtWidgets.QTableWidget(self.loungeTab)
        self.loungeTable.setGeometry(QtCore.QRect(10, 20, 1021, 661))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.loungeTable.setFont(font)
        self.loungeTable.setWordWrap(True)
        self.loungeTable.setObjectName("loungeTable")

        self.loungeTable.setColumnCount(9)
        self.loungeTable.setRowCount(0)

        # table settings
        self.defColumn(self.loungeTable)
        self.loungeTable.setColumnWidth(bedColumn,30)
        self.loungeTable.setColumnWidth(idColumn,30)
        self.loungeTable.setColumnWidth(nameColumn,135)
        self.loungeTable.setColumnWidth(detailsColumn,105)
        self.loungeTable.setColumnWidth(diagnosisColumn,155)
        self.loungeTable.setColumnWidth(isoColumn,75)
        self.loungeTable.setColumnWidth(dischargeColumn,75)
        self.loungeTable.setColumnWidth(dis_loungeColumn,75)
        self.loungeTable.setColumnWidth(dis_sumColumn,75)
        self.loungeTable.setColumnWidth(dis_medColumn,75)

        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.loungeTable.setHorizontalHeaderItem(8, item)

        self.tabWidget.addTab(self.loungeTab, "")


        #----------------------- ward tab -----------------------------------------------------------------
        self.wardTab = QtWidgets.QWidget()
        self.wardTab.setObjectName("wardTab")

        self.wardTable = QtWidgets.QTableWidget(self.wardTab)
        self.wardTable.setGeometry(QtCore.QRect(10, 20, 1131, 661))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.wardTable.setFont(font)
        self.wardTable.setWordWrap(True)
        self.wardTable.setObjectName("wardTable")

        self.wardTable.setColumnCount(8)
        self.wardTable.setRowCount(0)

        # table settings
        self.defColumn(self.wardTable)
        self.wardTable.setColumnWidth(bedColumn,30)
        self.wardTable.setColumnWidth(idColumn,30)
        self.wardTable.setColumnWidth(nameColumn,135)
        self.wardTable.setColumnWidth(detailsColumn,105)
        self.wardTable.setColumnWidth(diagnosisColumn,155)
        self.wardTable.setColumnWidth(isoColumn,75)
        self.wardTable.setColumnWidth(downstreamColumn,115)

        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.wardTable.setHorizontalHeaderItem(7, item)

        # downstream ward bed availability for ward tab
        self.wardFrame_2 = QtWidgets.QFrame(self.wardTab)
        self.wardFrame_2.setGeometry(QtCore.QRect(1160, 30, 201, 641))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.wardFrame_2.setFont(font)
        self.wardFrame_2.setAutoFillBackground(True)
        self.wardFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.wardFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.wardFrame_2.setObjectName("wardFrame_2")

        self.wardBedTitle_2 = QtWidgets.QLabel(self.wardFrame_2)
        self.wardBedTitle_2.setGeometry(QtCore.QRect(0, 10, 201, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(15)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.wardBedTitle_2.setFont(font)
        self.wardBedTitle_2.setStyleSheet("font: 15pt \"Arial\";")
        self.wardBedTitle_2.setScaledContents(False)
        self.wardBedTitle_2.setAlignment(QtCore.Qt.AlignCenter)
        self.wardBedTitle_2.setWordWrap(True)
        self.wardBedTitle_2.setObjectName("wardBedTitle_2")

        # cardiology ward (wardTab)
        self.cardioFrame_2 = QtWidgets.QFrame(self.wardFrame_2)
        self.cardioFrame_2.setGeometry(QtCore.QRect(20, 90, 161, 91))
        self.cardioFrame_2.setAutoFillBackground(False)
        self.cardioFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.cardioFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.cardioFrame_2.setObjectName("cardioFrame_2")

        self.cardioTitle_2 = QtWidgets.QLabel(self.cardioFrame_2)
        self.cardioTitle_2.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.cardioTitle_2.setFont(font)
        self.cardioTitle_2.setAlignment(QtCore.Qt.AlignCenter)
        self.cardioTitle_2.setObjectName("cardioTitle_2")

        self.cardio_2 = QtWidgets.QLabel(self.cardioFrame_2)
        self.cardio_2.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.cardio_2.setFont(font)
        self.cardio_2.setText("")
        self.cardio_2.setAlignment(QtCore.Qt.AlignCenter)
        self.cardio_2.setObjectName("cardio_2")

        # endocrinology ward (wardTab)
        self.endoFrame_2 = QtWidgets.QFrame(self.wardFrame_2)
        self.endoFrame_2.setGeometry(QtCore.QRect(20, 200, 161, 91))
        self.endoFrame_2.setAutoFillBackground(False)
        self.endoFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.endoFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.endoFrame_2.setObjectName("endoFrame_2")

        self.endoTitle_2 = QtWidgets.QLabel(self.endoFrame_2)
        self.endoTitle_2.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.endoTitle_2.setFont(font)
        self.endoTitle_2.setAlignment(QtCore.Qt.AlignCenter)
        self.endoTitle_2.setObjectName("endoTitle_2")

        self.endo_2 = QtWidgets.QLabel(self.endoFrame_2)
        self.endo_2.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.endo_2.setFont(font)
        self.endo_2.setText("")
        self.endo_2.setAlignment(QtCore.Qt.AlignCenter)
        self.endo_2.setObjectName("endo_2")

        # gastroenterology ward (wardTab)
        self.gastroFrame_2 = QtWidgets.QFrame(self.wardFrame_2)
        self.gastroFrame_2.setGeometry(QtCore.QRect(20, 310, 161, 91))
        self.gastroFrame_2.setAutoFillBackground(False)
        self.gastroFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.gastroFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.gastroFrame_2.setObjectName("gastroFrame_2")

        self.gastroTitle_2 = QtWidgets.QLabel(self.gastroFrame_2)
        self.gastroTitle_2.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.gastroTitle_2.setFont(font)
        self.gastroTitle_2.setAlignment(QtCore.Qt.AlignCenter)
        self.gastroTitle_2.setObjectName("gastroTitle_2")

        self.gastro_2 = QtWidgets.QLabel(self.gastroFrame_2)
        self.gastro_2.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()

        self.gastro_2.setText("")
        self.gastro_2.setAlignment(QtCore.Qt.AlignCenter)
        self.gastro_2.setObjectName("gastro_2")

        # geriatrics ward (wardTab)
        self.geriFrame_2 = QtWidgets.QFrame(self.wardFrame_2)
        self.geriFrame_2.setGeometry(QtCore.QRect(20, 420, 161, 91))
        self.geriFrame_2.setAutoFillBackground(False)
        self.geriFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.geriFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.geriFrame_2.setObjectName("geriFrame_2")

        self.geriTitle_2 = QtWidgets.QLabel(self.geriFrame_2)
        self.geriTitle_2.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.geriTitle_2.setFont(font)
        self.geriTitle_2.setAlignment(QtCore.Qt.AlignCenter)
        self.geriTitle_2.setObjectName("geriTitle_2")

        self.geri_2 = QtWidgets.QLabel(self.geriFrame_2)
        self.geri_2.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.geri_2.setFont(font)
        self.geri_2.setText("")
        self.geri_2.setAlignment(QtCore.Qt.AlignCenter)
        self.geri_2.setObjectName("geri_2")

        # respiratory ward (wardTab)
        self.respFrame_2 = QtWidgets.QFrame(self.wardFrame_2)
        self.respFrame_2.setGeometry(QtCore.QRect(20, 530, 161, 91))
        self.respFrame_2.setAutoFillBackground(False)
        self.respFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.respFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.respFrame_2.setObjectName("respFrame_2")

        self.respTitle_2 = QtWidgets.QLabel(self.respFrame_2)
        self.respTitle_2.setGeometry(QtCore.QRect(0, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.respTitle_2.setFont(font)
        self.respTitle_2.setAlignment(QtCore.Qt.AlignCenter)
        self.respTitle_2.setObjectName("respTitle_2")

        self.resp_2 = QtWidgets.QLabel(self.respFrame_2)
        self.resp_2.setGeometry(QtCore.QRect(40, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.resp_2.setFont(font)
        self.resp_2.setText("")
        self.resp_2.setAlignment(QtCore.Qt.AlignCenter)
        self.resp_2.setObjectName("resp_2")

        self.tabWidget.addTab(self.wardTab, "")

        self.tabWidget.raise_()
        self.patientListTitle.raise_()
        self.buttBack.raise_()
        self.buttConfirm.raise_()

        patientStatus.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(patientStatus)
        self.statusbar.setObjectName("statusbar")
        patientStatus.setStatusBar(self.statusbar)

        self.retranslateUi(patientStatus)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(patientStatus)



        # BUTTON/CHECKBOX CONNECTIONS

    

        # display patient info in tables on both tabs
        self.displayBed()
        # self.displayLounge()
        # self.displayWard()

    def displayLounge(self):
        size = getLoungeListSize()
        listnow = getPatientsinLounge()
        print(listnow)
        print("^^^^^this is patients in "+ self.loungeTable.objectName())

        self.defColumn(self.longeTable)

    
    def displayWard(self):
        size = getDownstreamListSize()
        listnow = getPatientsDownstream()
        print(listnow)
        print("^^^^^this is patients in "+ self.wardTable.objectName())

        self.defColumn(self.wardTable)


    def displayBed(self):      # this function updates the list of patients currently in an AMU bed that is saved in database
        # listnow = getPatientsinBed, getPatientsinLounge
        # table = bedTable, loungeTable
        size = getBedListSize()
        listnow = getPatientsinBed()
        print(listnow)
        print("^^^^^this is patients in "+ self.bedTable.objectName())


        self.defColumn(self.bedTable)

        self.bedTable.setRowCount(size) #setting the table row size
        row = 0
       
        for pat in listnow: #looping through each row of bed list to display each line/patient
            
            patient = getPatientInfo(pat[0])

            isoStatus = ""
            if patient[6] == 0:
                isoStatus = "N"
            elif patient[6] != 0:
                isoStatus = "Y"
                
            # creating widgets for the table cells
            checkBox_discharge = QtWidgets.QTableWidgetItem()
            checkBox_discharge.setCheckState(pat[2])

            checkBox_dischargeLounge = QtWidgets.QTableWidgetItem()
            checkBox_dischargeLounge.setCheckState(pat[3])

            checkBox_dischargeSum = QtWidgets.QTableWidgetItem()
            checkBox_dischargeSum.setCheckState(pat[4])

            checkBox_dischargeMed = QtWidgets.QTableWidgetItem()
            checkBox_dischargeMed.setCheckState(pat[5])


            comboBox_ward = QtWidgets.QComboBox()
            comboBox_ward.addItem("Select")
            comboBox_ward.addItem("Cardiology")
            comboBox_ward.addItem("Endocrinology")
            comboBox_ward.addItem("Gastroenterology")
            comboBox_ward.addItem("Geriatrics")
            comboBox_ward.addItem("Respiratory")
            comboBox_ward.setCurrentText(pat[6]) #

            #comboBox_ward.activated.connect(lambda: self.change_ward(pat[0]))

            checkBox_death = QtWidgets.QTableWidgetItem()
            checkBox_death.setCheckState(pat[7])

            #checkBox_discharge.stateChanged.connect(lambda: self.check_discharge(checkBox_discharge.objectName(), checkBox_dischargeLounge, checkBox_dischargeSum, checkBox_dischargeMed, comboBox_ward, checkBox_death, pat[0]))
            #checkBox_dischargeLounge.stateChanged.connect(lambda: self.check_dischargeLounge(checkBox_dischargeLounge, pat[0]))
            #checkBox_dischargeSum.stateChanged.connect(lambda: self.check_dischargeSum(checkBox_dischargeSum, pat[0]))
            #checkBox_dischargeMed.stateChanged.connect(lambda: self.check_dischargeMed(checkBox_dischargeMed, pat[0]))
            
            #comboBox_ward.currentTextChanged.connect(lambda: self.check_ward(comboBox_ward, checkBox_discharge, checkBox_death, pat[0]))
            #checkBox_death.stateChanged.connect(lambda: self.check_death(checkBox_death, checkBox_discharge, comboBox_ward, pat[0]))


            table.setRowHeight(row, 70)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)

            item.setText(str(patient[0]))
            table.setItem(row, idColumn, item) #id
            table.setItem(row, nameColumn, QtWidgets.QTableWidgetItem("{} {}".format(patient[1], patient[2]))) # name
            table.setItem(row, detailsColumn, QtWidgets.QTableWidgetItem(("Age: {} \nGender: {}").format(patient[3],patient[4]))) #age and gender
            table.setItem(row, diagnosisColumn, QtWidgets.QTableWidgetItem(("{}").format(patient[5]))) # diagnosis
            table.setItem(row, isoColumn, QtWidgets.QTableWidgetItem(isoStatus)) # isolation

            if table == self.bedTable:
                table.setItem(row, bedColumn, QtWidgets.QTableWidgetItem(pat[1])) # bed
                table.setItem(row, dischargeColumn, checkBox_discharge) # discharge status
                table.setItem(row, dis_loungeColumn, checkBox_dischargeLounge) # discharge lounge
                table.setItem(row, dis_sumColumn, checkBox_dischargeSum) # discharge summary
                table.setItem(row, dis_medColumn, checkBox_dischargeMed) # discharge medication
                table.setCellWidget(row, downstreamColumn, comboBox_ward) # downstream ward
                table.setItem(row, deathColumn, checkBox_death) # death


            elif table == self.loungeTable:
                table.setItem(row, dischargeColumn, checkBox_discharge) # discharge status
                table.setItem(row, dis_loungeColumn, checkBox_dischargeLounge) # discharge lounge
                table.setItem(row, dis_sumColumn, checkBox_dischargeSum) # discharge summary
                table.setItem(row, dis_medColumn, checkBox_dischargeMed) # discharge medication

            elif table == self.wardTable:
                table.setItem(row, bedColumn, QtWidgets.QTableWidgetItem(pat[1])) # bed
                table.setItem(row, downstreamColumn, QtWidgets.QTableWidgetItem(pat[6])) # downstream ward (display only, edit in beds tab)
                table.setCellWidget(row, deleteColumn, buttDel) # delete button

            row = row+1

        table.itemClicked.connect(self.updateDest)      #itemClicked.connect also works
        # #table.itemActivated.connect(self.updateDest)   #potential signal for the combobox change?

    def updateDest(self, item):
    # fetches the table that has been updated
        print("hello")
        # self.defColumn(table)
        
        # col = table.column(item)    # fetch column/row of checkbox/combobox that has been 
        # row = table.row(item)
        # state = item.checkState()
        # print(col+ "column")
        # print(row)
        # print(state)

        # patID = table.item(row, idColumn).text()        

        #checkBox_dischargeLounge = table.item(row, dis_loungeColumn)
        #checkBox_dischargeSum = table.item(row, dis_sumColumn)
        #checkBox_dischargeMed = table.item(row, dis_medColumn)
        #comboBox_ward = table.cellWidget(row, downstreamColumn)
        #checkBox_death = table.item(row, deathColumn)

        # if col == downstreamColumn:
        #     print("we clicked downstream")
        

        # if col == dischargeColumn:
        #     if state > 0:
        #         updateCheck_discharge(patID, state)     # update database
        #         print("discharge checked")
                
        #         #flags = QtCore.Qt.ItemFlags()      # trying to enable/disable other options
        #         #flags != Qt.ItemIsCheckable

        #         #checkBox_dischargeLounge.setFlags(flags)
        #         #checkBox_dischargeSum.setFlags(flags)
        #         #checkBox_dischargeMed.setFlags(flags)
        #         #comboBox_ward.hide()                            
        #         #checkBox_death.setFlags(flags)
            
        #     else:
        #         updateCheck_discharge(patID, state)     # update database
        #         print("discharge not checked")

        #         #flags = QtCore.Qt.ItemFlags()
        #         #flags = QtCore.Qt.ItemIsCheckable

        #         #checkBox_dischargeLounge.setFlags(flags)
        #         #checkBox_dischargeSum.setFlags(flags)
        #         #checkBox_dischargeMed.setFlags(flags)
        #         #comboBox_ward.show()
        #         #checkBox_death.setFlags(flags)

        # elif col == dis_loungeColumn:
        #     if state > 0:
        #         updateCheck_dischargeLounge(patID, state)     # update database
        #     elif state == 0:
        #         updateCheck_dischargeLounge(patID, state)     # update database

        # elif col == dis_sumColumn:
        #     if state > 0:
        #         updateCheck_dischargeSum(patID, state)      # update database
        #     elif state == 0:
        #         updateCheck_dischargeSum(patID, state)      # update database

        # elif col == dis_medColumn:
        #     if state > 0:
        #         updateCheck_dischargeMed(patID, state)      # update database
        #     elif state == 0:
        #         updateCheck_dischargeMed(patID, state)      # update database

        # elif col == deathColumn:
        #     if state > 0:
        #         updateCheck_death(patID, state)      # update database
        #         #checkBox_discharge.setCheckable(False)
        #         #comboBox_ward.hide()

        #     elif state == 0:
        #         updateCheck_death(patID, state)      # update database
        #         #checkBox_discharge.setCheckable(True)
        #         #comboBox_ward.show()
        # else:
        #     pass

        # patward = getPatientsDownstream()
        # print(patward)


#-------------------- functions to record changes ------------------------------

    ## WARD COMBOBOX
    
    def change_ward(self, patID):
        comboBox = app.sender()
        print(comboBox.objectName())

        currWard = comboBox.currentText()

        updateWard(patID, currWard)
        print("ward updated")
        print(currWard)

        patward = getPatientsDownstream()
        print(patward)

        #if currWard == "Select":
        #    checkBox_discharge.setCheckable(True)
        #    checkBox_death.setCheckable(True)
        #else:
        #    checkBox_discharge.setCheckable(False)
        #    checkBox_death.setCheckable(False)


    ### CHECKBOXES

    ### button.isChecked() = True/False
    ### button.checkState() = 0/1/2

    ## bug :
    ## all destination changes seem to only work on the last patient in list, and only when changed and doesn't show again after page is refreshed
    ## might be an issue when we are creating the checkboxes in display and each one is overwriting the previous one

    #def check_discharge(self, checkBox_discharge, checkBox_dischargeLounge, checkBox_dischargeSum, checkBox_dischargeMed, comboBox_ward, checkBox_death, patID):
    #    name = self.bedTab.findChild(QCheckBox, checkBox_discharge)
    #    state = name.checkState()
    #    print(state)
    #    if state > 0:
    #        updateCheck_discharge(patID, state)     # update database
    #        print("discharge checked")
    #        checkBox_dischargeLounge.setCheckable(True)         
    #        checkBox_dischargeSum.setCheckable(True)
    #        checkBox_dischargeMed.setCheckable(True)
    #        comboBox_ward.hide()                            
    #        checkBox_death.setCheckable(False)
            
    #    elif state == 0:
    #        updateCheck_discharge(patID, state)     # update database
    #        print("discharge not checked")
    #        checkBox_dischargeLounge.setCheckable(False)
    #        checkBox_dischargeSum.setCheckable(False)
    #        checkBox_dischargeMed.setCheckable(False)
    #        comboBox_ward.show()
    #        checkBox_death.setCheckable(True)


    #def check_dischargeLounge(self, checkBox_dischargeLounge, patID):
    #    state = checkBox_dischargeLounge.checkState()
    #    print("lounge checked")
    #    if state > 0:
    #        updateCheck_dischargeLounge(patID, state)     # update database
    #    elif state == 0:
    #        updateCheck_dischargeLounge(patID, state)     # update database


    #def check_dischargeSum(self, checkBox_dischargeSum, patID):
    #    state = checkBox_dischargeSum.checkState()
    #    print("lounge unchecked")
    #    if state > 0:
    #        updateCheck_dischargeSum(patID, state)      # update database
    #    elif state == 0:
    #        updateCheck_dischargeSum(patID, state)      # update database


    #def check_dischargeMed(self, checkBox_dischargeMed, patID):
    #    state = checkBox_dischargeMed.checkState()
    #    if state > 0:
    #        updateCheck_dischargeMed(patID, state)      # update database
    #    elif state == 0:
    #        updateCheck_dischargeMed(patID, state)      # update database


    #def check_death(self, checkBox_death, checkBox_discharge, comboBox_ward, patID):
    #    state = checkBox_death.checkState()
    #    if state > 0:
    #        updateCheck_death(patID, state)      # update database

    #        checkBox_discharge.setCheckable(False)
    #        comboBox_ward.hide()

    #    elif state == 0:
    #        updateCheck_death(patID, state)      # update database

    #        checkBox_discharge.setCheckable(True)
    #        comboBox_ward.show()


#---------------------- confirm button actions ---------------------------------

    def confirmChanges(self):
        # for both bedTable and loungeTable
        table = self.bedTable
        rowNum = table.rowCount()
        defColumn(table)
        for row in range(rowNum):
            # fetch patID
            patID = table.item(row,idColumn).text()
            print("patID:"patID)

            # fetch discharge, downstream, death
            checkBox_discharge = table.item(row,dischargeColumn)
            comboBox_ward = table.item(row,downstreamColumn)
            checkBox_death = table.item(row,deathColumn)

            n_dis = checkBox_discharge.checkState()
            n_ward = comboBox_ward.currentText()
            n_death = checkBox_death.checkState()

            if n_dis > 0 and n_ward == "Select" and n_death == 0:
                print("patient discharged")
                # fetch lounge, sum, med
                dis_lounge = table.item(row,dis_loungeColumn)
                dis_sum = table.item(row,dis_sumColumn)
                dis_med = table.item(row,dis_medColumn)

                # update database
                updateCheck_discharge(patID, n_dis)
                updateCheck_dischargeLounge(patID, dis_lounge.checkState())
                updateCheck_dischargeSum(patID, dis_sum.checkState())
                updateCheck_dischargeMed(patID, dis_med.checkState())

            elif n_ward != "Select" and n_dis == 0 and n_death == 0:
                print("patient downstreamed")
                updateWard(patID, n_ward)
            
            elif n_death > 0 and n_dis == 0 and n_ward == "Select":
                print("patient died")
                deletePatfromBed(patID)

            else:
                pass

        table = self.loungeTable
        rowNum = table.rowCount()
        defColumn(table)
        for row in range(rowNum):
            # fetch patID
            patID = table.item(row,idColumn).text()
            print("patID:"patID)

            # fetch discharge, downstream, death
            checkBox_discharge = table.item(row,dischargeColumn)
            n_dis = checkBox_discharge.checkState()

            if n_dis > 0:   # ensure discharge instruction is still in place
                print("patient discharged")
                # fetch lounge, sum, med
                dis_lounge = table.item(row,dis_loungeColumn)
                dis_sum = table.item(row,dis_sumColumn)
                dis_med = table.item(row,dis_medColumn)



    def defColumn(self, table):
        global bedColumn, idColumn, nameColumn, detailsColumn, diagnosisColumn, isoColumn, dischargeColumn, dis_loungeColumn, dis_sumColumn, dis_medColumn, downstreamColumn, deathColumn, deleteColumn
        if table == self.bedTable:
            bedColumn = 0
            idColumn = 1
            nameColumn = 2
            detailsColumn = 3
            diagnosisColumn = 4
            isoColumn = 5
            dischargeColumn = 6
            dis_loungeColumn = 7
            dis_sumColumn = 8
            dis_medColumn = 9
            downstreamColumn = 10
            deathColumn = 11
        elif table == self.loungeTable:
            idColumn = 0
            nameColumn = 1
            detailsColumn = 2
            diagnosisColumn = 3
            isoColumn = 4
            dischargeColumn = 5
            dis_loungeColumn = 6
            dis_sumColumn = 7
            dis_medColumn = 8
        elif table == self.wardTable:
            bedColumn = 0
            idColumn = 1
            nameColumn = 2
            detailsColumn = 3
            diagnosisColumn = 4
            isoColumn = 5
            downstreamColumn = 6
            deleteColumn = 7



    def retranslateUi(self, patientStatus):
        _translate = QtCore.QCoreApplication.translate
        patientStatus.setWindowTitle(_translate("patientStatus", "Waiting List"))
        self.patientListTitle.setText(_translate("patientStatus", "Patient Status"))
        self.buttBack.setText(_translate("patientStatus", "Return to Main"))
        self.buttConfirm.setText(_translate("patientStatus", "Confirm"))
        item = self.bedTable.horizontalHeaderItem(0)
        item.setText(_translate("patientStatus", "Bed"))
        item = self.bedTable.horizontalHeaderItem(1)
        item.setText(_translate("patientStatus", "ID"))
        item = self.bedTable.horizontalHeaderItem(2)
        item.setText(_translate("patientStatus", "Name"))
        item = self.bedTable.horizontalHeaderItem(3)
        item.setText(_translate("patientStatus", "Details"))
        item = self.bedTable.horizontalHeaderItem(4)
        item.setText(_translate("patientStatus", "Diagnosis"))
        item = self.bedTable.horizontalHeaderItem(5)
        item.setText(_translate("patientStatus", "Isolation"))
        item = self.bedTable.horizontalHeaderItem(6)
        item.setText(_translate("patientStatus", "Discharge"))
        item = self.bedTable.horizontalHeaderItem(7)
        item.setText(_translate("patientStatus", "Lounge"))
        item = self.bedTable.horizontalHeaderItem(8)
        item.setText(_translate("patientStatus", "Summary"))
        item = self.bedTable.horizontalHeaderItem(9)
        item.setText(_translate("patientStatus", "Medication"))
        item = self.bedTable.horizontalHeaderItem(10)
        item.setText(_translate("patientStatus", "Downstream"))
        item = self.bedTable.horizontalHeaderItem(11)
        item.setText(_translate("patientStatus", "Death"))
        self.wardBedTitle.setText(_translate("patientStatus", "Downstream Ward Bed Availabity"))
        self.cardioTitle.setText(_translate("patientStatus", "Cardiology"))
        self.endoTitle.setText(_translate("patientStatus", "Endocrinology"))
        self.gastroTitle.setText(_translate("patientStatus", "Gastroenterology"))
        self.geriTitle.setText(_translate("patientStatus", "Geriatrics"))
        self.respTitle.setText(_translate("patientStatus", "Respiratory"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.bedTab), _translate("patientStatus", "Beds"))
        item = self.loungeTable.horizontalHeaderItem(0)
        item.setText(_translate("patientStatus", "ID"))
        item = self.loungeTable.horizontalHeaderItem(1)
        item.setText(_translate("patientStatus", "Name"))
        item = self.loungeTable.horizontalHeaderItem(2)
        item.setText(_translate("patientStatus", "Details"))
        item = self.loungeTable.horizontalHeaderItem(3)
        item.setText(_translate("patientStatus", "Diagnosis"))
        item = self.loungeTable.horizontalHeaderItem(4)
        item.setText(_translate("patientStatus", "Isolation"))
        item = self.loungeTable.horizontalHeaderItem(5)
        item.setText(_translate("patientStatus", "Discharge"))
        item = self.loungeTable.horizontalHeaderItem(6)
        item.setText(_translate("patientStatus", "Lounge"))
        item = self.loungeTable.horizontalHeaderItem(7)
        item.setText(_translate("patientStatus", "Summary"))
        item = self.loungeTable.horizontalHeaderItem(8)
        item.setText(_translate("patientStatus", "Medication"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.loungeTab), _translate("patientStatus", "Discharge Lounge"))
        item = self.wardTable.horizontalHeaderItem(0)
        item.setText(_translate("patientStatus", "Bed"))
        item = self.wardTable.horizontalHeaderItem(1)
        item.setText(_translate("patientStatus", "ID"))
        item = self.wardTable.horizontalHeaderItem(2)
        item.setText(_translate("patientStatus", "Name"))
        item = self.wardTable.horizontalHeaderItem(3)
        item.setText(_translate("patientStatus", "Details"))
        item = self.wardTable.horizontalHeaderItem(4)
        item.setText(_translate("patientStatus", "Diagnosis"))
        item = self.wardTable.horizontalHeaderItem(5)
        item.setText(_translate("patientStatus", "Isolation"))
        item = self.wardTable.horizontalHeaderItem(6)
        item.setText(_translate("patientStatus", "Downstream"))
        item = self.wardTable.horizontalHeaderItem(7)
        item.setText(_translate("patientStatus", "Delete"))
        self.wardBedTitle_2.setText(_translate("patientStatus", "Downstream Ward Bed Availabity"))
        self.cardioTitle_2.setText(_translate("patientStatus", "Cardiology"))
        self.endoTitle_2.setText(_translate("patientStatus", "Endocrinology"))
        self.gastroTitle_2.setText(_translate("patientStatus", "Gastroenterology"))
        self.geriTitle_2.setText(_translate("patientStatus", "Geriatrics"))
        self.respTitle_2.setText(_translate("patientStatus", "Respiratory"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.wardTab), _translate("patientStatus", "Downstream"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    patientStatus = QtWidgets.QMainWindow()
    ui = Ui_patientStatus()
    ui.setupUi(patientStatus)
    patientStatus.show()
    sys.exit(app.exec_())
